
##############Test Begin#################
The input string is 0001 and the length of string is 4
simon algorithm - result: {'0011': 1293, '0111': 1277, '0010': 1237, '0100': 1272, '0001': 1236, '0000': 1251, '0101': 1209, '0110': 1225}
The number of output is as expexted
###############Test End##################

##############Test Begin#################
The input string is 1101 and the length of string is 4
simon algorithm - result: {'1010': 1234, '1001': 1309, '0111': 1280, '0100': 1215, '1101': 1249, '0011': 1239, '0000': 1227, '1110': 1247}
The number of output is as expexted
###############Test End##################

##############Test Begin#################
The input string is 00111 and the length of string is 5
simon algorithm - result: {'00001': 619, '11000': 635, '01110': 630, '10100': 613, '01101': 607, '00000': 619, '11010': 632, '00011': 610, '11001': 669, '10110': 625, '10111': 618, '10101': 619, '01111': 645, '01100': 599, '11011': 653, '00010': 607}
The number of output is as expexted
###############Test End##################

##############Test Begin#################
The input string is 111110 and the length of string is 6
simon algorithm - result: {'100011': 284, '001100': 280, '111101': 314, '100101': 315, '111011': 294, '000101': 316, '110010': 295, '101111': 336, '110001': 329, '000110': 333, '100110': 304, '001111': 327, '110111': 310, '000000': 331, '100000': 337, '001010': 300, '010111': 305, '010100': 319, '010001': 305, '011000': 320, '011011': 312, '111000': 293, '001001': 309, '000011': 326, '101100': 320, '110100': 303, '101001': 308, '011110': 320, '010010': 305, '011101': 321, '111110': 309, '101010': 320}
The number of output is as expexted
###############Test End##################

##############Test Begin#################
The input string is 00100 and the length of string is 5
simon algorithm - result: {'10011': 589, '00010': 613, '10000': 681, '01010': 607, '11000': 589, '01001': 647, '11010': 626, '01000': 640, '00011': 615, '00001': 660, '10001': 600, '11011': 614, '11001': 646, '10010': 607, '00000': 644, '01011': 622}
The number of output is as expexted
###############Test End##################

##############Test Begin#################
The input string is 011010 and the length of string is 6
simon algorithm - result: {'010011': 342, '010100': 314, '101110': 305, '110010': 327, '100110': 315, '111010': 298, '001111': 312, '000110': 320, '101111': 336, '111101': 321, '001000': 292, '001001': 295, '100001': 313, '100111': 307, '110011': 324, '010101': 324, '101000': 339, '111011': 322, '001110': 316, '000111': 308, '110100': 317, '101001': 293, '010010': 314, '111100': 289, '100000': 304, '011010': 299, '011101': 335, '011011': 292, '110101': 312, '000000': 333, '000001': 299, '011100': 283}
The number of output is as expexted
###############Test End##################

##############Test Begin#################
The input string is 0001 and the length of string is 4
simon algorithm - result: {'0110': 1200, '0111': 1269, '0101': 1227, '0100': 1264, '0010': 1274, '0001': 1216, '0011': 1289, '0000': 1261}
The number of output is as expexted
###############Test End##################

##############Test Begin#################
The input string is 000001 and the length of string is 6
simon algorithm - result: {'011100': 328, '010111': 314, '000110': 301, '001110': 303, '000011': 285, '001100': 294, '010000': 328, '010110': 346, '001010': 337, '000100': 327, '010101': 330, '000000': 295, '011001': 329, '011011': 312, '001101': 293, '000111': 316, '011000': 323, '010100': 317, '011110': 343, '001011': 327, '000101': 299, '010001': 315, '011111': 316, '001001': 297, '010010': 302, '011010': 273, '011101': 316, '000010': 299, '010011': 323, '000001': 293, '001111': 328, '001000': 291}
The number of output is as expexted
###############Test End##################

##############Test Begin#################
The input string is 101110 and the length of string is 6
simon algorithm - result: {'110001': 329, '100000': 302, '010001': 327, '011111': 300, '010100': 314, '110100': 299, '101100': 316, '111101': 306, '001100': 319, '100010': 330, '001011': 311, '101110': 330, '000101': 307, '111111': 301, '011000': 339, '011010': 316, '110110': 302, '001001': 330, '000000': 316, '101011': 317, '000010': 298, '111010': 319, '010011': 314, '110011': 285, '001110': 325, '100101': 307, '100111': 297, '010110': 322, '011101': 283, '101001': 297, '111000': 327, '000111': 315}
The number of output is as expexted
###############Test End##################

##############Test Begin#################
The input string is 111011 and the length of string is 6
simon algorithm - result: {'011010': 359, '001000': 290, '011001': 331, '100100': 325, '001101': 299, '000110': 339, '101111': 296, '110000': 333, '111000': 304, '111011': 309, '001110': 339, '010100': 301, '101001': 297, '000101': 313, '000011': 300, '101100': 305, '100010': 320, '001011': 311, '111110': 297, '111101': 313, '010010': 285, '000000': 314, '100111': 305, '110101': 327, '101010': 309, '110110': 319, '010111': 307, '110011': 309, '011100': 327, '011111': 300, '100001': 319, '010001': 298}
The number of output is as expexted
###############Test End##################

##############Test Begin#################
The input string is 0001 and the length of string is 4
Simon algorithm - result: {'0000': 1234, '0001': 1230, '0101': 1280, '0011': 1232, '0111': 1215, '0100': 1262, '0110': 1264, '0010': 1283}
Each output probability almost equals
###############Test End##################

##############Test Begin#################
The input string is 100000 and the length of string is 6
Simon algorithm - result: {'001100': 302, '110100': 319, '101100': 314, '010010': 327, '010110': 307, '110110': 327, '101010': 307, '100000': 316, '000010': 316, '100100': 303, '111100': 307, '000100': 314, '101110': 333, '110010': 319, '100110': 288, '111010': 334, '111000': 337, '011100': 309, '000000': 316, '101000': 284, '010100': 295, '001000': 296, '111110': 312, '100010': 301, '001110': 327, '010000': 307, '011010': 308, '011110': 307, '001010': 340, '000110': 310, '011000': 315, '110000': 303}
Each output probability almost equals
###############Test End##################

##############Test Begin#################
The input string is 110110 and the length of string is 6
Simon algorithm - result: {'110101': 315, '010101': 315, '101101': 307, '000100': 292, '011111': 307, '100111': 310, '110110': 318, '101010': 320, '111111': 316, '001010': 310, '110010': 315, '101110': 298, '111011': 326, '001110': 311, '111100': 293, '001101': 325, '100100': 309, '011011': 327, '110001': 315, '010001': 322, '101001': 316, '000111': 262, '001001': 333, '000000': 314, '100000': 299, '011000': 329, '000011': 336, '011100': 288, '010010': 316, '100011': 315, '111000': 311, '010110': 330}
Each output probability almost equals
###############Test End##################

##############Test Begin#################
The input string is 11110 and the length of string is 5
Simon algorithm - result: {'10000': 650, '01001': 601, '01010': 652, '10011': 649, '00000': 623, '11010': 651, '10110': 626, '01111': 600, '11100': 597, '00101': 690, '11001': 617, '01100': 582, '10101': 593, '11111': 589, '00110': 653, '00011': 627}
Each output probability almost equals
###############Test End##################

##############Test Begin#################
The input string is 101100 and the length of string is 6
Simon algorithm - result: {'101100': 319, '111001': 300, '000010': 328, '101011': 332, '110101': 293, '001011': 316, '100010': 305, '111110': 277, '011100': 319, '100101': 317, '111011': 319, '001110': 313, '110000': 298, '000111': 310, '000101': 333, '101110': 323, '110010': 305, '100111': 308, '001001': 323, '010101': 324, '000000': 306, '110111': 339, '010111': 294, '100000': 301, '101001': 311, '010000': 316, '011011': 290, '111100': 312, '011001': 339, '001100': 321, '010010': 312, '011110': 297}
Each output probability almost equals
###############Test End##################

##############Test Begin#################
The input string is 101111 and the length of string is 6
Simon algorithm - result: {'110000': 322, '000111': 306, '100001': 303, '001001': 308, '111110': 316, '001011': 351, '001110': 281, '111011': 323, '011101': 335, '011010': 314, '111100': 320, '100100': 292, '000101': 353, '110010': 299, '101000': 342, '001100': 308, '100011': 322, '101101': 323, '000000': 298, '110111': 275, '111001': 323, '110101': 291, '000010': 305, '010011': 285, '100110': 295, '010100': 318, '010110': 312, '101111': 299, '101010': 338, '011000': 334, '010001': 309, '011111': 300}
Each output probability almost equals
###############Test End##################

##############Test Begin#################
The input string is 11011 and the length of string is 5
Simon algorithm - result: {'11011': 631, '00011': 646, '01101': 626, '00100': 660, '00000': 650, '01010': 601, '01110': 616, '00111': 615, '10110': 609, '01001': 606, '11100': 631, '10010': 647, '10001': 645, '10101': 604, '11000': 622, '11111': 591}
Each output probability almost equals
###############Test End##################

##############Test Begin#################
The input string is 11001 and the length of string is 5
Simon algorithm - result: {'00111': 651, '10110': 613, '11001': 651, '00000': 643, '00100': 645, '10101': 578, '11101': 593, '00011': 613, '01100': 650, '11010': 614, '01111': 643, '01000': 611, '01011': 634, '11110': 624, '10001': 613, '10010': 624}
Each output probability almost equals
###############Test End##################

##############Test Begin#################
The input string is 0001 and the length of string is 4
Simon algorithm - result: {'0100': 1274, '0111': 1268, '0110': 1214, '0010': 1212, '0001': 1250, '0101': 1250, '0011': 1272, '0000': 1260}
Each output probability almost equals
###############Test End##################

##############Test Begin#################
The input string is 101000 and the length of string is 6
Simon algorithm - result: {'110000': 322, '000111': 310, '000101': 321, '110010': 303, '100101': 306, '010000': 305, '011000': 316, '101000': 307, '100000': 319, '010101': 328, '100111': 328, '001000': 322, '011010': 314, '110111': 302, '000000': 287, '001101': 307, '011111': 307, '111101': 314, '111000': 306, '101101': 289, '001111': 309, '111010': 298, '000010': 342, '110101': 334, '011101': 319, '010111': 325, '010010': 309, '001010': 303, '111111': 303, '100010': 323, '101111': 293, '101010': 329}
Each output probability almost equals
###############Test End##################

##############Test Begin#################
The input string is 0001 and the length of string is 4
Simon algorithm - result: {'0101': 1242, '0100': 1275, '0011': 1225, '0111': 1283, '0001': 1234, '0000': 1240, '0010': 1250, '0110': 1251}
The dotproduct results is as expected
###############Test End##################

##############Test Begin#################
The input string is 0001 and the length of string is 4
Simon algorithm - result: {'0010': 1232, '0100': 1312, '0101': 1234, '0110': 1246, '0001': 1249, '0111': 1239, '0000': 1245, '0011': 1243}
The dotproduct results is as expected
###############Test End##################

##############Test Begin#################
The input string is 0001 and the length of string is 4
Simon algorithm - result: {'0110': 1223, '0001': 1302, '0011': 1264, '0101': 1210, '0010': 1302, '0100': 1155, '0000': 1270, '0111': 1274}
The dotproduct results is as expected
###############Test End##################

##############Test Begin#################
The input string is 01111 and the length of string is 5
Simon algorithm - result: {'00000': 624, '01100': 604, '10010': 648, '10100': 576, '00001': 644, '11000': 636, '00110': 629, '01101': 646, '11001': 582, '01010': 641, '10011': 657, '00111': 614, '01011': 594, '11110': 637, '11111': 645, '10101': 623}
The dotproduct results is as expected
###############Test End##################

##############Test Begin#################
The input string is 10110 and the length of string is 5
Simon algorithm - result: {'11110': 611, '10101': 613, '00010': 600, '01011': 570, '01001': 657, '01110': 614, '01100': 637, '11011': 608, '00101': 594, '10000': 627, '11100': 592, '00111': 670, '11001': 653, '10111': 640, '10010': 643, '00000': 671}
The dotproduct results is as expected
###############Test End##################

##############Test Begin#################
The input string is 0110 and the length of string is 4
Simon algorithm - result: {'0110': 1284, '1111': 1217, '0111': 1251, '0001': 1274, '1001': 1216, '1110': 1288, '1000': 1222, '0000': 1248}
The dotproduct results is as expected
###############Test End##################

##############Test Begin#################
The input string is 000001 and the length of string is 6
Simon algorithm - result: {'001110': 335, '011101': 312, '001101': 323, '011000': 312, '000001': 321, '010000': 307, '000110': 315, '010111': 310, '001000': 300, '000000': 300, '011110': 327, '001011': 302, '001001': 307, '010100': 284, '010110': 294, '010011': 276, '000111': 307, '000010': 304, '010001': 319, '010101': 344, '001010': 304, '000101': 298, '000100': 330, '001111': 286, '010010': 330, '011111': 329, '001100': 320, '011100': 309, '011011': 328, '011010': 322, '011001': 335, '000011': 310}
The dotproduct results is as expected
###############Test End##################

##############Test Begin#################
The input string is 001111 and the length of string is 6
Simon algorithm - result: {'010110': 316, '110001': 306, '001111': 336, '100110': 306, '010111': 318, '001101': 300, '111100': 315, '100100': 299, '000010': 326, '101011': 309, '100101': 307, '001110': 299, '011010': 326, '000000': 310, '001100': 308, '111101': 298, '110010': 333, '011011': 304, '101001': 306, '111111': 348, '010100': 295, '101010': 318, '000001': 319, '110011': 320, '010101': 298, '110000': 305, '111110': 311, '011001': 304, '100111': 337, '101000': 325, '011000': 293, '000011': 305}
The dotproduct results is as expected
###############Test End##################

##############Test Begin#################
The input string is 1101 and the length of string is 4
Simon algorithm - result: {'1101': 1191, '0100': 1343, '0011': 1223, '0111': 1237, '0000': 1231, '1001': 1264, '1010': 1246, '1110': 1265}
The dotproduct results is as expected
###############Test End##################

##############Test Begin#################
The input string is 000111 and the length of string is 6
Simon algorithm - result: {'011110': 300, '000100': 319, '110011': 321, '101101': 315, '000110': 296, '101111': 332, '110001': 314, '101011': 286, '110101': 296, '000010': 304, '011011': 359, '110100': 309, '101100': 330, '000011': 304, '011000': 294, '000101': 328, '110010': 288, '101110': 290, '101000': 318, '110110': 301, '000001': 340, '101010': 303, '000111': 319, '110000': 338, '011001': 331, '011100': 316, '011010': 322, '011111': 290, '000000': 320, '110111': 281, '011101': 313, '101001': 323}
The dotproduct results is as expected
###############Test End##################

The test runs for 3814.25 ms
